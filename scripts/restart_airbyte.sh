#!/bin/bash

# ============================================================================
# SCRIPT DE RESTART OTIMIZADO DO AIRBYTE
# ============================================================================
# Baseado nas melhores pr√°ticas para evitar problemas de "Server temporarily unavailable"
# e garantir inicializa√ß√£o correta dos servi√ßos

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Diret√≥rio do projeto
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/.."
CONFIG_DIR="$PROJECT_DIR/config"

echo -e "${BLUE}üîÑ Iniciando restart otimizado do Airbyte...${NC}"

# Fun√ß√£o para verificar se um servi√ßo est√° saud√°vel
check_service_health() {
    local service_name=$1
    local max_attempts=30
    local attempt=1
    
    echo -e "${YELLOW}‚è≥ Aguardando $service_name ficar saud√°vel...${NC}"
    
    while [ $attempt -le $max_attempts ]; do
        if docker-compose -f "$CONFIG_DIR/docker-compose.yml" ps $service_name | grep -q "healthy\|Up"; then
            echo -e "${GREEN}‚úÖ $service_name est√° saud√°vel${NC}"
            return 0
        fi
        
        echo -e "${YELLOW}‚è≥ Tentativa $attempt/$max_attempts - Aguardando $service_name...${NC}"
        sleep 10
        ((attempt++))
    done
    
    echo -e "${RED}‚ùå $service_name n√£o ficou saud√°vel ap√≥s $max_attempts tentativas${NC}"
    return 1
}

# Fun√ß√£o para verificar uso de mem√≥ria
check_memory_usage() {
    echo -e "${BLUE}üìä Verificando uso de mem√≥ria...${NC}"
    
    # Verificar mem√≥ria dispon√≠vel no sistema
    available_memory=$(free -m | awk 'NR==2{printf "%.0f", $7}')
    echo -e "${BLUE}üíæ Mem√≥ria dispon√≠vel: ${available_memory}MB${NC}"
    
    if [ $available_memory -lt 4096 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Aviso: Mem√≥ria dispon√≠vel baixa. Recomendado: 8GB+ para Airbyte${NC}"
    fi
}

# Fun√ß√£o para limpar recursos tempor√°rios
clean_temp_resources() {
    echo -e "${BLUE}üßπ Limpando recursos tempor√°rios...${NC}"
    
    # Limpar containers parados
    docker container prune -f > /dev/null 2>&1 || true
    
    # Limpar volumes √≥rf√£os (cuidado para n√£o remover dados importantes)
    echo -e "${YELLOW}‚ö†Ô∏è  Limpando volumes √≥rf√£os (dados tempor√°rios)...${NC}"
    docker volume prune -f > /dev/null 2>&1 || true
    
    # Limpar cache de imagens n√£o utilizadas
    docker image prune -f > /dev/null 2>&1 || true
    
    echo -e "${GREEN}‚úÖ Limpeza conclu√≠da${NC}"
}

# Fun√ß√£o principal de restart
restart_airbyte() {
    cd "$CONFIG_DIR"
    
    echo -e "${BLUE}üõë Parando servi√ßos do Airbyte na ordem correta...${NC}"
    
    # Parar servi√ßos na ordem inversa de depend√™ncia
    echo -e "${YELLOW}‚èπÔ∏è  Parando airbyte-webapp...${NC}"
    docker-compose stop airbyte-webapp || true
    
    echo -e "${YELLOW}‚èπÔ∏è  Parando airbyte-worker...${NC}"
    docker-compose stop airbyte-worker || true
    
    echo -e "${YELLOW}‚èπÔ∏è  Parando airbyte-server...${NC}"
    docker-compose stop airbyte-server || true
    
    echo -e "${YELLOW}‚èπÔ∏è  Parando airbyte-temporal...${NC}"
    docker-compose stop airbyte-temporal || true
    
    echo -e "${YELLOW}‚èπÔ∏è  Parando airbyte-db...${NC}"
    docker-compose stop airbyte-db || true
    
    # Aguardar um momento para garantir que os containers pararam
    echo -e "${YELLOW}‚è≥ Aguardando containers pararem completamente...${NC}"
    sleep 5
    
    # Verificar mem√≥ria antes de reiniciar
    check_memory_usage
    
    echo -e "${BLUE}üöÄ Iniciando servi√ßos do Airbyte na ordem correta...${NC}"
    
    # Iniciar banco de dados primeiro
    echo -e "${YELLOW}üóÑÔ∏è  Iniciando airbyte-db...${NC}"
    docker-compose up -d airbyte-db
    check_service_health "airbyte-db"
    
    # Iniciar Temporal
    echo -e "${YELLOW}‚è∞ Iniciando airbyte-temporal...${NC}"
    docker-compose up -d airbyte-temporal
    check_service_health "airbyte-temporal"
    
    # Iniciar servidor
    echo -e "${YELLOW}üñ•Ô∏è  Iniciando airbyte-server...${NC}"
    docker-compose up -d airbyte-server
    check_service_health "airbyte-server"
    
    # Iniciar worker
    echo -e "${YELLOW}üë∑ Iniciando airbyte-worker...${NC}"
    docker-compose up -d airbyte-worker
    check_service_health "airbyte-worker"
    
    # Iniciar webapp
    echo -e "${YELLOW}üåê Iniciando airbyte-webapp...${NC}"
    docker-compose up -d airbyte-webapp
    check_service_health "airbyte-webapp"
    
    echo -e "${GREEN}‚úÖ Todos os servi√ßos do Airbyte foram reiniciados com sucesso!${NC}"
}

# Fun√ß√£o para mostrar status dos servi√ßos
show_status() {
    echo -e "${BLUE}üìã Status dos servi√ßos Airbyte:${NC}"
    cd "$CONFIG_DIR"
    docker-compose ps airbyte-db airbyte-temporal airbyte-server airbyte-worker airbyte-webapp
    
    echo -e "\n${BLUE}üîó URLs de acesso:${NC}"
    echo -e "${GREEN}‚Ä¢ Airbyte UI: http://localhost:8080${NC}"
    echo -e "${GREEN}‚Ä¢ Airbyte API: http://localhost:8001${NC}"
    echo -e "${GREEN}‚Ä¢ Temporal UI: http://localhost:7233${NC}"
}

# Fun√ß√£o para mostrar logs
show_logs() {
    local service=${1:-"airbyte-server"}
    echo -e "${BLUE}üìú Mostrando logs do $service...${NC}"
    cd "$CONFIG_DIR"
    docker-compose logs -f --tail=50 $service
}

# Menu principal
case "${1:-restart}" in
    "restart")
        restart_airbyte
        show_status
        ;;
    "clean-restart")
        clean_temp_resources
        restart_airbyte
        show_status
        ;;
    "status")
        show_status
        ;;
    "logs")
        show_logs "${2:-airbyte-server}"
        ;;
    "stop")
        echo -e "${BLUE}üõë Parando todos os servi√ßos Airbyte...${NC}"
        cd "$CONFIG_DIR"
        docker-compose stop airbyte-webapp airbyte-worker airbyte-server airbyte-temporal airbyte-db
        echo -e "${GREEN}‚úÖ Servi√ßos Airbyte parados${NC}"
        ;;
    "help")
        echo -e "${BLUE}üîß Script de Restart Otimizado do Airbyte${NC}"
        echo -e "\nUso: $0 [comando] [op√ß√µes]"
        echo -e "\nComandos dispon√≠veis:"
        echo -e "  restart       - Restart padr√£o dos servi√ßos (padr√£o)"
        echo -e "  clean-restart - Restart com limpeza de recursos tempor√°rios"
        echo -e "  status        - Mostra status dos servi√ßos"
        echo -e "  logs [servi√ßo]- Mostra logs (padr√£o: airbyte-server)"
        echo -e "  stop          - Para todos os servi√ßos"
        echo -e "  help          - Mostra esta ajuda"
        echo -e "\nExemplos:"
        echo -e "  $0                    # Restart padr√£o"
        echo -e "  $0 clean-restart      # Restart com limpeza"
        echo -e "  $0 logs airbyte-worker # Ver logs do worker"
        ;;
    *)
        echo -e "${RED}‚ùå Comando inv√°lido: $1${NC}"
        echo -e "${YELLOW}Use '$0 help' para ver os comandos dispon√≠veis${NC}"
        exit 1
        ;;
esac