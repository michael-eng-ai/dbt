# ðŸš€ Pipeline DBT Focado - TransformaÃ§Ãµes de Dados
# Credenciais padronizadas: admin/admin
# Foco: DBT + TransformaÃ§Ãµes + Camadas MedalhÃ£o

version: '3.8'

networks:
  dbt_network:
    name: dbt_network

services:
  # ============================================================================
  # BANCO DE DADOS SOURCE - CDC HABILITADO
  # ============================================================================
  postgres_source:
    image: postgres:13
    container_name: postgres_source_db
    networks:
      - dbt_network
    ports:
      - "${POSTGRES_SOURCE_PORT:-5430}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_SOURCE_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_SOURCE_PASSWORD:-admin}
      POSTGRES_DB: ${POSTGRES_SOURCE_DB:-db_source}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_source_data:/var/lib/postgresql/data
      - ../postgres_init_scripts:/docker-entrypoint-initdb.d
    # ConfiguraÃ§Ãµes avanÃ§adas para CDC
    command: >
      postgres
      -c wal_level=${POSTGRES_WAL_LEVEL:-logical}
      -c max_wal_senders=${POSTGRES_MAX_WAL_SENDERS:-10}
      -c max_replication_slots=${POSTGRES_MAX_REPLICATION_SLOTS:-10}
      -c max_logical_replication_workers=${POSTGRES_MAX_LOGICAL_REPLICATION_WORKERS:-10}
      -c listen_addresses='*'
      -c shared_preload_libraries='pg_stat_statements'
      -c track_commit_timestamp=on
      -c logging_collector=on
      -c log_statement=all
      -c log_min_duration_statement=0
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_SOURCE_USER:-admin} -d ${POSTGRES_SOURCE_DB:-db_source}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    env_file:
      - env.config

  # ============================================================================
  # DATA LAKE - MinIO (S3-Compatible)
  # ============================================================================
  minio:
    image: minio/minio:latest
    container_name: minio_storage
    networks:
      - dbt_network
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    env_file:
      - env.config

  # ============================================================================
  # APIS SIMULADAS REMOVIDAS - PROJETO FOCADO EM DBT
  # ============================================================================

  # ============================================================================
  # DBT RUNNER - TRANSFORMAÃ‡Ã•ES DE DADOS
  # ============================================================================
  dbt_runner:
    image: python:3.9-slim
    container_name: dbt_runner_container
    networks:
      - dbt_network
    depends_on:
      postgres_source:
        condition: service_healthy
    volumes:
      - ../dbt_project:/usr/app/dbt_project
      - ../dbt_profiles:/root/.dbt
    working_dir: /usr/app/dbt_project
    environment:
      DBT_TARGET_TYPE: ${DBT_TARGET_TYPE:-postgres}
      DBT_TARGET_HOST: postgres_source
      DBT_TARGET_PORT: 5432
      DBT_TARGET_USER: ${DEFAULT_USER:-admin}
      DBT_TARGET_PASSWORD: ${DEFAULT_PASSWORD:-admin}
      DBT_TARGET_DB: ${POSTGRES_SOURCE_DB_NAME:-db_source}
      DBT_TARGET_SCHEMA: public
    command: >
      bash -c "
      apt-get update && apt-get install -y postgresql-client curl;
      pip install dbt-postgres==1.9.0 dbt-core==1.9.0;
      tail -f /dev/null;
      "
    restart: unless-stopped
    env_file:
      - env.config



# ============================================================================
# VOLUMES
# ============================================================================
volumes:
  postgres_source_data:
    driver: local
  minio_data:
    driver: local